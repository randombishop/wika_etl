version: "3"

services:
  postgres:
    image: postgres:12-alpine
    ports:
      - 5433:5433
    volumes:
      - .data/postgres:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: postgres
      PGPORT: 5433
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  neo4j:
    image: neo4j
    ports:
      - 7474:7474
      - 7687:7687
    volumes:
      - .data/neo4j:/var/lib/neo4j/data
    environment:
      NEO4J_AUTH: neo4j/1234
    healthcheck:
      test: ["CMD-SHELL", "neo4j status | grep running"]
      interval: 5s
      timeout: 5s
      retries: 5

  subquery-node:
    image: onfinality/subql-node:v0.27.2
    depends_on:
      "postgres":
        condition: service_healthy
      "neo4j":
        condition: service_healthy
    environment:
      NODE_TLS_REJECT_UNAUTHORIZED: 0
      DB_DATABASE: postgres
      DB_HOST: postgres
      DB_PORT: 5433
      DB_USER: postgres
      DB_PASS: postgres
      NEO4J_ENABLE: 1
      NEO4J_HOST: bolt://neo4j
      NEO4J_USER: neo4j
      NEO4J_PASS: 1234
      ES_ENABLE: 0
      ES_HOST: elsaticsearch
      ES_PORT: 1234
      ES_USER: es
      ES_PASS: es
    volumes:
      - ./:/app
      - ./sandbox.override.js:/usr/local/lib/node_modules/@subql/node/dist/indexer/sandbox.service.js
    command:
      - -f=/app
      - --db-schema=app
    healthcheck:
      test: ["CMD", "curl", "-f", "http://subquery-node:3000/ready"]
      interval: 3s
      timeout: 5s
      retries: 10

  graphql-engine:
    image: onfinality/subql-query:v0.11.0
    ports:
      - 3000:3000
    depends_on:
      "postgres":
        condition: service_healthy
      "subquery-node":
        condition: service_healthy
    restart: always
    environment:
      DB_USER: postgres
      DB_PASS: postgres
      DB_DATABASE: postgres
      DB_HOST: postgres
      DB_PORT: 5433
    command:
      - --name=app
      - --playground
      - --indexer=http://subquery-node:3000
